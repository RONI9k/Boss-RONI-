name: Auto Close Sensitive PRs

on:
  pull_request:
    types: [opened, edited, synchronize]
  workflow_dispatch:

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  auto-close:
    runs-on: ubuntu-latest
    steps:
      - name: Scan and close sensitive PRs
        uses: actions/github-script@v7
        with:
          script: |
            const keywords = [
              { key: "config.json", msg: "üí° **Dear user**, Don't share your private config info to us. Thanks ‚ù§Ô∏è‚Äçü©π" },
              { key: "appstate.json", msg: "‚ö†Ô∏è **Dear user**, Please don‚Äôt share your **Facebook appstate.json** file ‚Äî it contains sensitive cookies & IDs. Stay safe ‚ù§Ô∏è‚Äçüî•" }
            ];

            async function handlePR(pr) {
              const text = (pr.title + " " + (pr.body || "")).toLowerCase();
              let sensitive = null;

              // check for keywords in title/body
              for (const { key, msg } of keywords) {
                if (text.includes(key)) {
                  sensitive = { key, msg };
                  break;
                }
              }

              // check for keywords in file changes
              if (!sensitive) {
                const files = await github.rest.pulls.listFiles({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number
                });
                for (const file of files.data) {
                  for (const { key, msg } of keywords) {
                    if (file.filename.toLowerCase().includes(key)) {
                      sensitive = { key, msg };
                      break;
                    }
                  }
                  if (sensitive) break;
                }
              }

              if (sensitive) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: sensitive.msg
                });
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  state: "closed"
                });
                console.log(`üö´ Closed PR #${pr.number} due to '${sensitive.key}'.`);
                return true;
              }
              return false;
            }

            // handle PR events
            if (context.eventName === "pull_request") {
              const pr = context.payload.pull_request;
              await handlePR(pr);
            }
            // optional manual trigger
            else if (context.eventName === "workflow_dispatch") {
              console.log("üîç Manually scanning all open PRs...");
              const { data: pulls } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open",
                per_page: 100
              });

              for (const pr of pulls) {
                await handlePR(pr);
              }
              console.log("‚úÖ Manual scan complete.");
            }
